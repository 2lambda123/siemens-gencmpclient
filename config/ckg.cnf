[default]
digest = sha256
msg_timeout = 10
total_timeout = 100
ignore_keyusage = 1
unprotected_errors = 1


[no-certstatus]
crls =
use_cdp = 0
cdps =
use_aia = 0
ocsp =

[CmpRa] # LightweightCmpRa
server = http://md1raekc:6000/onlinelra
secret = pass:myPresharedSecret
cert = creds/CMP_EE_Keystore.p12
key = $cert
cert = creds/CMP_EE_Chain.pem # workaround for cmpossl
# if the cert file contains private key, openssl shows spurious error:
#asn1_check_tlen:crypto/asn1/tasn_dec.c:1156:CMP error: wrong tag:
#asn1_item_embed_d2i:crypto/asn1/tasn_dec.c:322:CMP error: nested asn1 error:Type=EC_PRIVATEKEY
key = creds/CMP_EE_Key.pem # workaround for cmpossl
keypass = pass:Password
subject = "/CN=test-genCMPClientDemo"
untrusted = creds/ENROLL_Chain.pem
trusted = creds/trusted/CMP_LRA_DOWNSTREAM_Root.pem
out_trusted = creds/trusted/ENROLL_Root.pem
#tls_trusted =
#tls_host = $server
#tls_cert = ${ENV::EJBCA_TLS_CLIENT}
#tls_key = $tls_cert
#tls_keypass = pass:12345
tls_used = 0
#crls =
#use_cdp = 1
#cdps =
#use_aia = 1
#ocsp = ${ENV::EJBCA_OCSP_URL}

[Insta]
server = pki.certificate.fi:8700/pkix/
secret = pass:insta
ref = 3078
#would need to be updated every 3 months:
#cert = creds/insta_client.p12
#key = $cert
cert = creds/manufacturer.crt
key = creds/manufacturer.pem
keypass = pass:12345
recipient = "/C=FI/O=Insta Demo/CN=Insta Demo CA"
subject = "/CN=test-genCMPClientDemo"
cacert = creds/trusted/InstaDemoCA.crt
#srvcert = $cacert
trusted = $cacert
crls = creds/crls/InstaDemoCA.crl
out_trusted = $cacert

tls_used = 0
#tls_trusted = $cacert
#tls_host = pki.certificate.fi
#tls_cert = $cert
#tls_key = $key

[imprint]
server = http://md1raekc:6002/lrawithmacprotection
secret = pass:myPresharedSecret
cmd = ir
cert =
key =
newkeytype = central:
newkeytype = central:EC:secp521r1  # specifies type of key to request
newkey = creds/manufacturer.pem # fallback for cmpossl
newkeypass = pass:12345
reqexts = reqexts
policies = certificatePolicies
certout = creds/manufacturer.crt

[bootstrap]
cmd = cr
secret =
newkey = creds/operational.pem # fallback for cmpossl
newkeypass = pass:12345
newkeytype = central:
newkey = creds/manufacturer.pem # fallback for cmpossl
newkeypass = pass:12345
reqexts = reqexts
policies = certificatePolicies
san_nodefault = 1
certout = creds/operational.crt

[bootstraprsa]
cmd = cr
secret =
newkey = creds/operational.pem # fallback for cmpossl
newkeypass = pass:12345
newkeytype = central:
newkey = creds/manufacturer.pem # fallback for cmpossl
newkeypass = pass:12345
reqexts = reqexts
policies = certificatePolicies
san_nodefault = 1
certout = creds/operational.crt
cert = creds/CMP_EE_Chain_RSA.pem # workaround for cmpossl
key = creds/CMP_EE_Key_RSA.pem # workaround for cmpossl

[update]
path = ejbca/publicweb/cmp/PlaygroundCMPSigning
cmd = kur
secret =
cert = $bootstrap::certout
key = $bootstrap::newkey
keypass = $bootstrap::newkeypass
newkeytype = $bootstrap::newkeytype
newkey = $bootstrap::newkey # fallback for cmpossl
newkeypass = $bootstrap::newkeypass
reqexts = ""
policies = ""
#oldcert = $bootstrap::certout
subject = ""
implicit_confirm = 1
certout = $bootstrap::certout

[revoke]
path = ejbca/publicweb/cmp/PlaygroundCMPSigning
cmd = rr
secret =
cert = $bootstrap::certout
key = $bootstrap::newkey
keypass = $bootstrap::newkeypass
oldcert = $update::certout
revreason = 5 #CRL_REASON_CESSATION_OF_OPERATION
subject =

[pkcs10]
cmd = p10cr
# Insta will respond with CMP body popdecc POPODecKeyChallContent, --pop Challenge
secret =
ref = dummy # in EJBCA case there is no ref - fallback for sender as no cert and subject is given
csr = creds/operational.csr # generated by transforming operational.crt
subject =
certout = $bootstrap::certout

[validate]
keypass = pass:12345
tls_keypass = $keypass

[check_originality]
certout = creds/operational.crt

[empty]
#keyUsage =
#extendedKeyUsage =
#subjectAltName =

[reqexts]
#basicConstraints = CA:FASE
keyUsage = "critical, digitalSignature" # is ignored by EJBCA
extendedKeyUsage = "critical, serverAuth, 1.3.6.1.5.5.7.3.2" # is ignored by EJBCA
subjectAltName = @alt_names

[alt_names]
DNS.0 = localhost
IP.0 = 127.0.0.1
IP.1 = 192.168.0.1
URI.0 = http://192.168.0.2

[certificatePolicies]
certificatePolicies = "critical, @pkiPolicy"

[pkiPolicy]
policyIdentifier = 1.3.6.1.4.1.4329.38.4.2.2
CPS = http://www.my-company.com/pki-policy/
userNotice.1 = @notice

[notice]
explicitText=policy text
