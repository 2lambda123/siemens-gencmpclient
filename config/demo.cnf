[default]
digest = sha256
msg_timeout = 10
total_timeout = 100
ignore_keyusage = 1
unprotectederrors = 1
#proxy = http://de.coia.siemens.net:9400
no_proxy = ppki-playground.ct.siemens.com

[EJBCA]
server = ppki-playground.ct.siemens.com:443
path = /ejbca/publicweb/cmp/PlaygroundECC
secret = pass:SecretCmp
cert = creds/ppki_playground_cmp_signer.p12
key = $cert
keypass = pass:12345
recipient = "/CN=PPKI Playground ECC Issuing CA v1.0/OU=Corporate Technology/OU=For internal test purposes only/O=Siemens/C=DE"
subject = "/CN=test-genCMPClientDemo/OU=PPKI Playground/OU=Corporate Technology/OU=For internal test purposes only/O=Siemens/C=DE"
#srvcert = creds/trusted/PPKIPlaygroundECCRootCAv10.crt
trusted = "creds/trusted/PPKIPlaygroundECCRootCAv10.crt, creds/trusted/PPKIPlaygroundInfrastructureRootCAv10.crt"
out_trusted = $trusted
tls_trusted = creds/trusted/PPKIPlaygroundInfrastructureRootCAv10.crt
#tls_host = $server
tls_cert = creds/ppki_playground_tls.p12
tls_key = $tls_cert
tls_keypass = pass:12345
tls_used = 1
crls = "http://ppki-playground.ct.siemens.com/ejbca/publicweb/webdist/certdist?cmd=crl&format=DER&issuer=CN=PPKI+Playground+ECC+Issuing+CA+v1.0%2cOU=Corporate+Technology%2cOU=For+internal+test+purposes+only%2cO=Siemens%2cC=DE, creds/crls/PPKIPlaygroundECCRootCAv10.crl, creds/crls/PPKIPlaygroundInfrastructureRootCAv10.crl"
use_cdp = 1
cdps = "http://ppki-playground.ct.siemens.com/ejbca/publicweb/webdist/certdist?cmd=crl&format=DER&issuer=CN=PPKI+Playground+ECC+Root+CA+v1.0%2cOU=Corporate+Technology%2cOU=For+internal+test+purposes+only%2cO=Siemens%2cC=DE, https://ppki-playground.ct.siemens.com/ejbca/publicweb/webdist/certdist?cmd=crl&format=DER&issuer=CN=PPKI+Playground+Infrastructure+Root+CA+v1.0%2cOU=Corporate+Technology%2cOU=For+internal+test+purposes+only%2cO=Siemens%2cC=DE"
use_aia = 1
ocsp = "http://ppki-playground.ct.siemens.com/ejbca/publicweb/status/ocsp"

[Insta]
server = pki.certificate.fi:8700
path = pkix/
secret = pass:insta
ref = 3078
cert = creds/insta_client.p12
key = $cert
keypass = pass:12345
recipient = "/C=FI/O=Insta Demo/CN=Insta Demo CA"
subject = "/CN=test-genCMPClientDemo"
cacert = creds/trusted/InstaDemoCA.crt
#srvcert = $cacert
trusted = $cacert
crls = creds/crls/InstaDemoCA.crl
out_trusted = $cacert

tls_used = 0
#tls_trusted = $cacert
#tls_host = pki.certificate.fi
#tls_cert = $cert
#tls_key = $key

[imprint]
cmd = ir
cert =
key =
newkeytype = EC:prime256v1 # ECC implies EC:secp256r1
newkey = creds/new.pem
newkeypass = pass:12345
reqexts = reqexts
policies = certificatePolicies
san_nodefault = 1
certout = creds/new.crt

[bootstrap]
cmd = cr
secret =
newkeytype = $imprint::newkeytype
newkey = $imprint::newkey
newkeypass = $imprint::newkeypass
reqexts = $imprint::reqexts
policies = $imprint::policies
san_nodefault = 1
certout = $imprint::certout

[update]
cmd = kur
path = /ejbca/publicweb/cmp/PlaygroundCMPSigning
secret =
# not needed: newkeytype = $imprint::newkeytype
# not needed: newkey = $imprint::newkey
# not needed: newkeypass = $imprint::newkeypass
oldcert = $imprint::certout # creds/new.crt # TODO check why needed
subject =
implicit_confirm = 1
certout = $imprint::certout

[revoke]
cmd = rr
path = /ejbca/publicweb/cmp/PlaygroundCMPSigning
secret =
oldcert = $update::certout # creds/new.crt
subject =
# not needed: newkey = $imprint::newkey
# not needed: newkeypass = $imprint::newkeypass

[pkcs10]
cmd = p10cr
# Insta will respond with CMP body popdecc POPODecKeyChallContent, --pop Challenge
ref = dummy # in EJBCA case there is no ref - fallback for sender as no cert and subject is given
csr = creds/test.csr.pem
subject = # is overridden by CA setting
certout = $imprint::certout

[reqexts]
#basicConstraints = CA:FASE
keyUsage = "critical, digitalSignature"
extendedKeyUsage = "critical, serverAuth, 1.3.6.1.5.5.7.3.2"
subjectAltName = @alt_names

[alt_names]
DNS.0 = localhost
IP.0 = 127.0.0.1
IP.1 = 192.168.0.1
URI.0 = http://192.168.0.2

[certificatePolicies]
certificatePolicies = "critical, @pkiPolicy"

[pkiPolicy]
policyIdentifier = 1.3.6.1.4.1.4329.38.4.2.2
CPS = http://www.siemens.com/pki-policy/
userNotice.1 = @notice

[notice]
explicitText=Siemens policy text
