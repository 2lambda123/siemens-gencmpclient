[default]
#digest = sha256
#msg_timeout = 10
#total_timeout = 100
#ignore_keyusage = 0
#unprotected_errors = 0
no_proxy = ${ENV::EJBCA_HOST}
#verbosity = 7

[Simple] # TODO use LightweightRA rather than Simple RA
server = localhost:9080
path = cmp/PlaygroundECC
trusted = ${ENV::EJBCA_CMP_TRUSTED}, ${ENV::EJBCA_TRUSTED}
recipient = ${ENV::EJBCA_CMP_RECIPIENT}
subject = ${ENV::EJBCA_CMP_SUBJECT} # /CN=test-service/
out_trusted = ${ENV::EJBCA_CMP_TRUSTED}

[EJBCA]
server = ${ENV::EJBCA_HOST}:80 #443 if tls_used = 1
path = ejbca/publicweb/cmp/PlaygroundECC
trusted = ${ENV::EJBCA_CMP_TRUSTED}, ${ENV::EJBCA_TRUSTED}
recipient = ${ENV::EJBCA_CMP_RECIPIENT}
subject = ${ENV::EJBCA_CMP_SUBJECT} # /CN=test-service/
secret = pass:SecretCmp
cert = ${ENV::EJBCA_CMP_CLIENT}
key = $cert
keypass = pass:12345
out_trusted = ${ENV::EJBCA_CMP_TRUSTED}
#tls_trusted = ${ENV::EJBCA_TRUSTED}
##tls_host = $server
#tls_cert = ${ENV::EJBCA_TLS_CLIENT}
#tls_key = $tls_cert
#tls_keypass = pass:12345
#tls_used = 1
unprotected_errors = 1


[EE04] # 5.1.4 Request a certificate from a PKI with PBMAC protection (RECOMMENDED)
cmd = ir
secret = pass:SecretCmp
ref = any
#cert =
#key =
#keypass =
subject = ${ENV::EJBCA_CMP_SUBJECT} # /CN=test-device
newkeytype = EC:secp521r1
newkeypass = pass:12345
newkey = creds/manufacturer.pem
certout = creds/manufacturer.crt

[EE01] #_5.1.1 Request a certificate from a new PKI with signature protection (MANDATORY)
cmd = ir
#secret =
cert = $EE04::certout
key = $EE04::newkey
keypass = $EE04::newkeypass

newkeytype = EC:prime256v1 # ECC implies EC:secp256r1
newkeypass = pass:12345
newkey = creds/operational.pem
certout = creds/operational.crt

[EE03] # 5.1.2 Request a certificate from a trusted PKI with signature protection (OPTIONAL)
cmd = cr
#secret =
cert = $EE01::certout
key = $EE01::newkey
keypass = $EE01::newkeypass

subject = ${ENV::EJBCA_CMP_SUBJECT} # /CN=test-service2
reqexts = reqexts
policies = certificatePolicies
san_nodefault = 1
newkeytype = EC:secp384r1
newkeypass = pass:123456
newkey = creds/operational2.pem
certout = creds/operational2.crt

[EE02] # 5.1.3 Update an existing certificate with signature protection (MANDATORY)
cmd = kur
server = localhost:9083 # overrides EJBCA
path = cmp/PlaygroundECC # overrides EJBCA
#secret =
cert = $EE01::certout
key = $EE01::newkey
keypass = $EE01::newkeypass

oldcert = $EE01::certout # == cert
subject =
newkeytype = $EE01::newkeytype
newkey = $EE01::newkey
newkeypass = $EE01::newkeypass
certout = $EE01::certout

# not supported by Simple RA:
[EE05] # 5.1.5 Request a certificate from a legacy PKI using PKCS#10 request (OPTIONAL)
cmd = p10cr
#server = localhost:9080 # overrides EJBCA
#path = cmp/PlaygroundECC # overrides EJBCA
cert = $EE01::certout
key = $EE01::newkey
keypass = $EE01::newkeypass

csr = creds/test.csr.pem
newkeytype =
newkey =
newkeypass =
certout = $EE01::certout

[EE??] # 5.1.6 Generate the key pair centrally ...  (OPTIONAL)

[EE??] # 5.1.7 Delayed enrollment (RECOMMENDED)

[EE09] # 5.2 Revoking a certificate (RECOMMENDED)
server = localhost:9083 # overrides EJBCA
path = cmp/PlaygroundECC # overrides EJBCA
cmd = rr
#secret =
cert = $EE03::certout
key = $EE03::newkey
keypass = $EE03::newkeypass

subject =
newkeytype =
oldcert = $EE03::certout # == cert
revreason = 5 # cessationOfOperation

[EE10] # 5.3 Error reporting (MANDATORY)
cmd = $EE01::cmd
#secret =
cert = $EE01::cert
key = $EE01::key
keypass = $EE01::keypass

newkeytype = $EE01::newkeytype
newkeypass = $EE01::newkeypass
newkey = $EE01::newkey
certout = $EE01::certout
out_trusted = $EE04::certout # wrong trust anchor

[EE??] # 5.4.1 General message and response  (OPTIONAL)

[EE??] # 5.4.2 Get CA certificates  (OPTIONAL)

[EE??] # 5.4.3 Get root CA certificate update  (OPTIONAL)

[EE??] # 5.4.4 Get certificate request parameters  (OPTIONAL)

[RA11] # 6.3 Error reporting (MANDATORY)
cmd = $EE01::cmd
#secret =
cert = $EE01::cert
key = $EE01::key
keypass = $EE01::keypass

subject = "/CN=test-service2/O=WRONG" # rejected by EJBCA
newkeytype = $EE01::newkeytype
newkeypass = $EE01::newkeypass
newkey = $EE01::newkey
certout = $EE01::certout

[S_7.1-??] # HTTP transport

[S_7.2-??] # HTTPS transport using certificates

[S_7.3-??] # HTTPS transport using shared secrets

[S_7.4-??] # File-based transport

[S_7.5-??] # CoAP transport

[S_7.6-??] # Piggybacking on another reliable transport


[reqexts]
#basicConstraints = CA:FALSE
keyUsage = "critical, digitalSignature" # is ignored by EJBCA
extendedKeyUsage = "critical, serverAuth, 1.3.6.1.5.5.7.3.2" # is ignored by EJBCA
subjectAltName = @alt_names

[alt_names]
DNS.0 = localhost
IP.0 = 127.0.0.1
IP.1 = 192.168.0.1
URI.0 = http://192.168.0.2

[certificatePolicies]
certificatePolicies = "critical, @pkiPolicy"

[pkiPolicy]
policyIdentifier = 1.3.6.1.4.1.4329.38.4.2.2
CPS = http://www.my-company.com/pki-policy/
userNotice.1 = @notice

[notice]
explicitText=policy text
